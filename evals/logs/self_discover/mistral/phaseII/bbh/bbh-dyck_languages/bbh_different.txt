] ], `[[ ]]`.
] ] >, `<[]>`.
}, None
) >, `< [ ] { < ( ) > } [ ] ( { } )`.
>, None
] ), None
), `( { { } } )`.
) ) >, `< ( ( ( [ { } ] ) ) ) >`.
], `[ < > ] [ [ < > ] ]`.
), None
) > >, < < ( ( [ ] ) ) >.
>, `< ( { } ) >`.
> >, None
>, < { [ ] } >.
), ( [ { < ( [ ] ) > } ] ).
), ( { < [ < > ] > } )
], None
}, `{ < ( [ ] ) > }`.
> } >, `< { < ( ) > } >`.
), None
), None
], [ { < ( ) > } ].
], None
) >, None
) ) }, None
) } >, `< { < > } { () } < >`.
> ] ], `[ [ < < { } > > > ] ]`.
) >, < ( () )
], `( ( ) ) [ { ( < > ) } ]`.
} > ], None
) ), ( ( [ [ ] ] ) ).
] } }, None
> ], None
], `( { } )`.
), the sequence is already properly closed: ( { < { ( ) } > } { ( { [ ] } ) }
] }, `{ [ [ ] [ ] ] }`.
> ), None
] ), None
) } >, None
>, < ( { [ { } ] } [ ] [ ] ) >.
) }, None
] }, None
} > >, None
> ], `[ < [ ] ] >`.
> > }, None
> ], None
) }, `{ ( < { < ( ) > } > ) }`.
) ], None
>, < ( ) >.
> } ], `[ { < ( ) > } ]`.
) ), ( ( [ < [ ] > { { [ [ ] ] } } ] ) )
} }, None
) >, `< < > ( [ ] ) > >`.
} >, `< ( < > ) > { } < { [ < > ] } >`.
] ], `[ < [ ] > [ ] ]`.
), None
) ), `( ( ( [ { } ] ) )`.
), [ { { } } ] ( < { < [ ( ) ] > } >.
> }, None
), None
> ) ), None
) ), `( ) ( ( ))`.
> ) }, `{ < [ ] > ( { [ ] } < ) } > }`.
), ( < ( ) > )
) ) }, `{ ( ( ) ( { ( < ( ) > ) } ) }`.
) > ], None
), ( < < < ( < < > > ) > > > ).
>, `< < > >`.
), None
> > ), ( ) ( < < { } > > ) ( )
} ), `( < ( [ ] ) > ) { }`.
), `( < { } [ ] > )`.
}, None
] >, None
>, None
> >, None
), ( { [ [ { } ] ] } )
} >, None
> >, < < < [ ( ) ] > > >.
} ), None
) > }, None
) ) }, `{ ( ( ) ) }`.
) ], `( ( { < ( { } ) > } ) )`.
), ( [ < < { } > > ] ).
> }, ( ) { < > } { }.
) }, None
> > }, `{ < < { ( < > ) } > } > }`.
] } }, None
} }, `{ {}}`.
] ) }, None
) ], None
> } >, None
] } ], `{ [ < [ < { } > ] [ ] > ] }`.
> > >, None
> } >, None
], None
} ) >, `< ( { ( < < > > ) > } ) >`.
) >, < ( < > ) >.
> } ], None
} ], [ { { ( ) } } ].
] ] ], `{ [ { [ ] } ] } [ ] [ ]`.
} ], `{ ( < [ [ ] ] > ) }`.
}, `{ ( ( [ ] ) ) }`.
] ), `( < < > > < > [ ] [ ) < > ]`.
>, None
] }, `{ [ { { { } } } } } } }`.
) ] ], the properly closed sequence:
) ], `()`.
} ), `( { } )`.
) ], None
) ] }, `{ [ [ < > ] ( ) ] } ( )`.
) >, `< ( ) ( { { [ ] } } ) >`.
>, < < ( [ ] ) > < >.
] ), `( [ ] )`.
], None
] >, None
} ) >, `< ( { } )`.
] ) ], `( [] )`.
>, None
) ), None
), None
), ( ( { ( ( { } ) ) ( ( [ ] ) ) } ) ).
], [ < < > > ]
>, `< [ [ { } ] ] >`.
] ) ], ( ) [ ( [ < { { ( { } ) } } > ] ) ] )
} } ], None
> ), ( < ( [ < < [ ] > > ] ) > > ).
] > }, [ ] { [ [ < { { { } } } > ] ] < [ { } ] }.
} ] ), ( [ ( { } ) { < ( ( [ ] ) ) > } ] )
} } ), None
> ) }, `{ ( < [ < > ] > ) }`.
}, `{ ( [ ] ) }`.
> ), None
> } >, None
) }, `{ ( [ [ ] ( ) ] ) }`.
], `[ < { [ ] } > ]`.
) ), `( ( < > ) ) >`.
> >, `< < { ( < ( ) > ) } >`.
], None
}, `{ { } ( ( ) ) }`.
] }, `< ( [ { [ { } ] } ] ) >`.
] } ), ( { [ { } ] } ).
} ), None
) >, None
} ] }, `{ [ { { { < > } } } } ]`.
) > }, None
} ], `[ < > { < [ ] > } > ]`.
> ] ], [ [ < > ] ]
), `( { } )`.
}, None
} >, `< {} >`.
) ] ], None
> >, None
> > }, `{ < < ( ) ) > > }`.
> ], `( ) < >`.
} ] }, None
> ], [ < { < [ ( < > ) ( ( [ [ ] ] ) ) ( ( { } ) ) { [ ] } < ( < > ) > ] > } ]
} } ), None
) >, `<()>`.
] }, `{ [ < { < ( ( ) ) > } > ] }`
> ], None
}, `( { } ) { ( [ { ( ) } ] ( [ ] ) ) }`.
] >, None
}, `{ < > { { ( { } ) } { { ( ( ) ) } } } }`.
} } }, `{ { ( [ ] ) { ( ) } } }`.
>, None
) } >, `< { [ < > ] ( ( ( ( { { } } ) ) ) } >`.
], None
} >, `< { [ < > ] } >`.
>, < [ { ( ( < ( ( ) ) > ) ) } ] >.
> >, None
), [ ] [ { } ] ( ( ) )
) }, [ ] < { < > } > { ( ) } >.
} ), The sequence is already properly closed.
> ) }, `{ ( < ) > }`.
} ) }, None
} }, None
> ) ), `( ( < < < ( ( ) ) ( [ ] ) > > { [ ] } > > ) )`.
> ], `[ < { { } } > ]`.
>, < < < > > >.
} ] >, None
] > ), `( < [ ( ) ] > )`.
> ], [ < [ ( [ < > ] { < > } [ [ ] ] ) ] ].
>, < ( ( [ ( [ ] ) ] ) ) >.
>, `< [ ] >`.
], None
) ), ( ( {} ) )
] ] ], None
) >, `{ } < { } < > ()`.
) ), None
) } }, `{ < { } > { () } > }`.
), None
> > }, `{}<<>>`.
}, `{ { { } } } }`.
] ] >, None
) } >, < { ( ( ) ) } >
) ], ( < { [ ( ) ] } > )
} ) ), None
>, [ ] < { < { [ () ] } > } >.
], None
] ) ), ( < > ( [ ( ) ] ) ).
), ( < { ( ) { } } ( < > ) >
) > >, `< < ( < > ) >`.
) }, `{ { } ( ( < > ) ) }`.
), None
> > ), ( < < < >>>.
>, `<[<()>]>`.
}, `< > { }`.
>, None
>, `< [ < > ] >`.
}, { [ [ [ [ ( ) ] ] ] ] }.
}, None
> ), None
], [ < < { } > < > > ( ) > ].
) > ], [ < ( < < > [ ] ( ) > ) > ]
] }, `{ [ < [ { < ( ) > } ] > }`.
> } ], None
) ], `[ [ < [ ( [ < [ ] > ] ) ] > ] ( { } ) ]`.
] ), ( [ ( ) ] ).
} ) }, None
}, None
) ), None
} }, `{ { [ { < { } > } ( ) ] }`.
) ), < [ ] > ( ( ( { { { { ( ( { { } } ) ) } ( { } ) } } { { { [ { ( ) } ( ) ( ( { [ < < > > ] < < > > } ) ) ] ( { } { } ) } } } } ) ) )
], None
] ) ), None
} ), `( { } < > { < { ( < > ) } > } )`.
> >, < < [ ] > ( < > ) < > > ( )
} ] >, None
) ] >, None
} } }, [ < [ { { < > [ ( ) ] ( ( ) ) } } ] > ] { { { ( < > ) } } }.
), None
>, < { ( { } ) < > }.
> }, `{ < [ ] > }`.
} >, ( { } ) < { < { } > } >.
) >, `< ( ( { < > } ) ) >`.
), `((() ) )`.
] ], None
} }, None
], `[ [ { { < ( ) > } } ] ]`.
}, None
} }, None
>, `[ [ < [ ] > ] ] < > ()`.
] ], None
) ), None
) ), None
>, < < { } > >.
), `( < > )`.
} ), `( { ( ) } )`.
) ), None
